project(tesseract-ocr)
cmake_minimum_required(VERSION 2.8)

include_directories(${LEPTONICA_INCLUDE_DIRS})

add_definitions(-DUSE_STD_NAMESPACE)
add_definitions(-fPIC)

set(DUMMY_CPP "${CMAKE_BINARY_DIR}/dummy.cpp")
file(WRITE "${DUMMY_CPP}" "//autogenerated file by cmake\n")

add_subdirectory(ccutil)
add_subdirectory(viewer)
add_subdirectory(cutil)
add_subdirectory(opencl)
add_subdirectory(ccstruct)
add_subdirectory(dict)
add_subdirectory(classify)
add_subdirectory(wordrec)
add_subdirectory(neural_networks/runtime)
add_subdirectory(textord)
add_subdirectory(cube)
add_subdirectory(ccmain)
add_subdirectory(api)
add_subdirectory(tessdata)
add_subdirectory(doc)


####### Build merged static lib #######

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")
include(MergeStaticLibraries)

add_library(tesseract_static STATIC "${DUMMY_CPP}")
target_link_libraries(tesseract_static ${STATIC_LIB_LINK}
    $<TARGET_FILE:tesseract_api_static>
    $<TARGET_FILE:tesseract_main_static>
    $<TARGET_FILE:tesseract_cube_static>
    $<TARGET_FILE:tesseract_neural_static>
    $<TARGET_FILE:tesseract_textord_static>
    $<TARGET_FILE:tesseract_wordrec_static>
    $<TARGET_FILE:tesseract_classify_static>
    $<TARGET_FILE:tesseract_dict_static>
    $<TARGET_FILE:tesseract_ccstruct_static>
    $<TARGET_FILE:tesseract_cutil_static>
    $<TARGET_FILE:tesseract_viewer_static>
    $<TARGET_FILE:tesseract_ccutil_static>
    $<TARGET_FILE:tesseract_opencl_static>
    ${LEPTONICA_LIBRARIES}
)

set(CMAKE_BUILD_TYPE release)
MERGE_STATIC_LIBRARIES (tesseract_static ALL
    "
        ${CMAKE_BINARY_DIR}/api/libtesseract_api_static.a
        ${CMAKE_BINARY_DIR}/neural_networks/runtime/libtesseract_neural_static.a
        ${CMAKE_BINARY_DIR}/textord/libtesseract_textord_static.a
        ${CMAKE_BINARY_DIR}/wordrec/libtesseract_wordrec_static.a
        ${CMAKE_BINARY_DIR}/classify/libtesseract_classify_static.a
        ${CMAKE_BINARY_DIR}/dict/libtesseract_dict_static.a
        ${CMAKE_BINARY_DIR}/ccstruct/libtesseract_ccstruct_static.a
        ${CMAKE_BINARY_DIR}/cutil/libtesseract_cutil_static.a
        ${CMAKE_BINARY_DIR}/viewer/libtesseract_viewer_static.a
        ${CMAKE_BINARY_DIR}/ccutil/libtesseract_ccutil_static.a
        ${CMAKE_BINARY_DIR}/opencl/libtesseract_opencl_static.a
        /home/aspotashev/soft-git/leptonica-1.71/install/lib/liblept.a
    "
)
install(TARGETS tesseract_static DESTINATION lib)

########### install files ###############

# install(FILES  tesseract.pc DESTINATION )



#original Makefile.am contents follow:

### run autogen.sh to create Makefile.in from this file
#ACLOCAL_AMFLAGS = -I m4
#
#if ENABLE_TRAINING
#TRAINING_SUBDIR = training
#training:
#	@cd "$(top_builddir)/training" && $(MAKE)
#training-install:
#	@cd "$(top_builddir)/training" && $(MAKE) install
#clean-local:
#	@cd "$(top_builddir)/training" && $(MAKE) clean
#else
#training:
#	@echo "Need to reconfigure project, so there are no errors"
#endif
#
#.PHONY: install-langs ScrollView.jar install-jars $(TRAINING_SUBDIR)
#
#SUBDIRS = ccutil viewer cutil opencl ccstruct dict classify wordrec neural_networks/runtime textord cube ccmain api . tessdata doc
#
#EXTRA_DIST = ReleaseNotes \
#	aclocal.m4 config configure.ac autogen.sh contrib \
#	tesseract.pc.in $(TRAINING_SUBDIR) java doc testing
#
#DIST_SUBDIRS  = $(SUBDIRS) $(TRAINING_SUBDIR)
#
#uninstall-hook:
#	rm -rf $(DESTDIR)$(includedir)
#
#dist-hook:
## Need to remove .svn directories from directories
## added using EXTRA_DIST. $(distdir)/tessdata would in
## theory suffice.
#	rm -rf `find $(distdir) -name .svn`
#	rm -rf `find $(distdir) -name .git`
#	rm -rf `find $(distdir) -name .deps`
#	rm -rf `find $(distdir) -name .libs`
#	rm -rf `find $(distdir) -name *.o`
#	rm -rf `find $(distdir) -name *.lo`
#	rm -rf `find $(distdir) -name *.la`
#	rm -rf `find $(distdir)/training -executable -type f`
#	rm -rf $(distdir)/doc/html/*
#
#ScrollView.jar:
#	@cd "$(top_builddir)/java" && $(MAKE) $@
#
#install-jars:
#	@cd "$(top_builddir)/java" && $(MAKE) $@
#
#doc-dummy:
#
#doc: doc-dummy
#	-srcdir="$(top_srcdir)" builddir="$(top_builddir)" \
#	version="@PACKAGE_VERSION@" name="@PACKAGE_NAME@" \
#	doxygen $(top_srcdir)/doc/Doxyfile
#
#doc-pack: doc
#	-chmod a+r $(top_srcdir)/doc/html/*
#	 @tar --create --directory=$(top_srcdir)/doc/html --verbose --file=- . | gzip -c -9 > $(top_srcdir)/@PACKAGE_NAME@-@PACKAGE_VERSION@-doc-html.tar.gz;
#
#doc-clean:
#	rm -rf $(top_srcdir)/doc/html/*
#
#pkgconfigdir = $(libdir)/pkgconfig
#pkgconfig_DATA = tesseract.pc
